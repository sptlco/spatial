name: Drop

on:
  push:
    branches: [main]
    paths:
      - 'api/**'
      - 'cloud/**'
      - 'design/**'
      - 'documentation/**'
      - 'examples/**'
      - 'interface/**'
      - 'scripts/**'
      - .eslintrc
      - .gitignore
      - .prettierrc
      - LICENSE
      - package.json
      - tsconfig.json

concurrency:
  group: release
  cancel-in-progress: false

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write
  
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        name: Release
        with:
          config-file: release.json
          manifest-file: manifest.json
          
  name: Drop

on:
  push:
    branches: [main]
    paths:
      - 'cloud/Core/Spatial.csproj'
      - 'cloud/**'
      - .eslintrc
      - .gitignore
      - .prettierrc
      - LICENSE
      - package.json
      - tsconfig.json

concurrency:
  group: release
  cancel-in-progress: false

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        name: Release
        with:
          config-file: release.json
          manifest-file: manifest.json

  publish:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.x'

      - name: Get base release
        id: get_version
        run: |
          git fetch --tags
          TAG=$(git tag --list 'spatial-[0-9]*.[0-9]*.[0-9]*' --sort=-v:refname | head -n 1)
          if [ -z "$TAG" ]; then
            echo "No base tag found, exiting"
            exit 1
          fi
          BASE_VERSION="${TAG#spatial-}"
          echo "BASE_VERSION=$BASE_VERSION" >> $GITHUB_ENV
          echo "Base version is $BASE_VERSION"

      - name: Update version
        run: |
          CSPROJ="cloud/Core/Spatial.csproj"
          echo "Updating $CSPROJ to version $BASE_VERSION"
          sed -i "s/<Version>.*<\/Version>/<Version>${BASE_VERSION}<\/Version>/" "$CSPROJ"

      - name: Restore
        run: dotnet restore cloud/Core/Spatial.csproj

      - name: Package
        run: dotnet pack cloud/Core/Spatial.csproj -c Release -o ./nupkg

      - name: Publish
        run: |
          dotnet nuget push ./nupkg/*.nupkg \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" \
            --api-key ${{ secrets.GITHUB_TOKEN }}
